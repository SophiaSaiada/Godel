{
  "val declaration": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ValDeclaration",
          "props": {
            "name": "x",
            "type": null,
            "value": {
              "name": "FloatLiteral",
              "props": {
                "value": 3.14
              }
            }
          }
        }
      ]
    }
  },
  "typed val declaration with lambda": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ValDeclaration",
          "props": {
            "name": "x",
            "type": {
              "name": "Type.Functional",
              "props": {
                "parameterTypes": [
                  {
                    "name": "Type.Regular",
                    "props": {
                      "name": "R",
                      "nullable": true,
                      "typesParameters": []
                    }
                  },
                  {
                    "name": "Type.Regular",
                    "props": {
                      "name": "X",
                      "nullable": false,
                      "typesParameters": []
                    }
                  },
                  {
                    "name": "Type.Functional",
                    "props": {
                      "parameterTypes": [],
                      "resultType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "String",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "nullable": false
                    }
                  },
                  {
                    "name": "Type.Functional",
                    "props": {
                      "parameterTypes": [
                        {
                          "name": "Type.Regular",
                          "props": {
                            "name": "String",
                            "nullable": false,
                            "typesParameters": []
                          }
                        }
                      ],
                      "resultType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "nullable": false
                    }
                  }
                ],
                "resultType": {
                  "name": "Type.Regular",
                  "props": {
                    "name": "T",
                    "nullable": true,
                    "typesParameters": []
                  }
                },
                "nullable": true
              }
            },
            "value": {
              "name": "Lambda",
              "props": {
                "parameters": [],
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 1
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "operations precedence": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ValDeclaration",
          "props": {
            "name": "x",
            "type": null,
            "value": {
              "name": "BinaryExpression",
              "props": {
                "left": {
                  "name": "BinaryExpression",
                  "props": {
                    "left": {
                      "name": "BinaryExpression",
                      "props": {
                        "left": {
                          "name": "IntLiteral",
                          "props": {
                            "value": 1
                          }
                        },
                        "right": {
                          "name": "BinaryExpression",
                          "props": {
                            "left": {
                              "name": "BinaryExpression",
                              "props": {
                                "left": {
                                  "name": "IntLiteral",
                                  "props": {
                                    "value": 2
                                  }
                                },
                                "right": {
                                  "name": "IntLiteral",
                                  "props": {
                                    "value": 3
                                  }
                                },
                                "operator": "Division"
                              }
                            },
                            "right": {
                              "name": "IntLiteral",
                              "props": {
                                "value": 4
                              }
                            },
                            "operator": "Times"
                          }
                        },
                        "operator": "Plus"
                      }
                    },
                    "right": {
                      "name": "FloatLiteral",
                      "props": {
                        "value": 4.2
                      }
                    },
                    "operator": "Plus"
                  }
                },
                "right": {
                  "name": "InfixExpression",
                  "props": {
                    "left": {
                      "name": "BinaryExpression",
                      "props": {
                        "left": {
                          "name": "BinaryExpression",
                          "props": {
                            "left": {
                              "name": "BinaryExpression",
                              "props": {
                                "left": {
                                  "name": "BinaryExpression",
                                  "props": {
                                    "left": {
                                      "name": "Invocation",
                                      "props": {
                                        "function": {
                                          "name": "BinaryExpression",
                                          "props": {
                                            "left": {
                                              "name": "BinaryExpression",
                                              "props": {
                                                "left": {
                                                  "name": "IntLiteral",
                                                  "props": {
                                                    "value": 5
                                                  }
                                                },
                                                "right": {
                                                  "name": "Identifier",
                                                  "props": {
                                                    "value": "y"
                                                  }
                                                },
                                                "operator": "Dot"
                                              }
                                            },
                                            "right": {
                                              "name": "Identifier",
                                              "props": {
                                                "value": "z"
                                              }
                                            },
                                            "operator": "Dot"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "name": "FunctionArgument",
                                            "props": {
                                              "name": null,
                                              "value": {
                                                "name": "Identifier",
                                                "props": {
                                                  "value": "a"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "FunctionArgument",
                                            "props": {
                                              "name": null,
                                              "value": {
                                                "name": "Identifier",
                                                "props": {
                                                  "value": "b"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "FunctionArgument",
                                            "props": {
                                              "name": null,
                                              "value": {
                                                "name": "Identifier",
                                                "props": {
                                                  "value": "c"
                                                }
                                              }
                                            }
                                          }
                                        ],
                                        "typeArguments": [
                                          {
                                            "name": "TypeArgument",
                                            "props": {
                                              "name": "X",
                                              "value": {
                                                "name": "Type.Regular",
                                                "props": {
                                                  "name": "String",
                                                  "nullable": false,
                                                  "typesParameters": []
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "right": {
                                      "name": "IntLiteral",
                                      "props": {
                                        "value": 6
                                      }
                                    },
                                    "operator": "LessThanEqual"
                                  }
                                },
                                "right": {
                                  "name": "BinaryExpression",
                                  "props": {
                                    "left": {
                                      "name": "IntLiteral",
                                      "props": {
                                        "value": 7
                                      }
                                    },
                                    "right": {
                                      "name": "IntLiteral",
                                      "props": {
                                        "value": 8
                                      }
                                    },
                                    "operator": "GreaterThan"
                                  }
                                },
                                "operator": "Equal"
                              }
                            },
                            "right": {
                              "name": "IntLiteral",
                              "props": {
                                "value": 9
                              }
                            },
                            "operator": "And"
                          }
                        },
                        "right": {
                          "name": "IntLiteral",
                          "props": {
                            "value": 10
                          }
                        },
                        "operator": "Or"
                      }
                    },
                    "right": {
                      "name": "IntLiteral",
                      "props": {
                        "value": 11
                      }
                    },
                    "function": "to"
                  }
                },
                "operator": "Elvis"
              }
            }
          }
        }
      ]
    }
  },
  "if statement": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Statement",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "negativeBranch": {
              "name": "Block.WithoutValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "IntLiteral",
                        "props": {
                          "value": 2
                        }
                      }
                    ]
                  }
                }
              }
            },
            "positiveBranch": {
              "name": "Block.WithoutValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if expression": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "returnValue": {
                  "name": "StringLiteral",
                  "props": {
                    "value": "hello"
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 2
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if expression single expression": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "BooleanLiteral",
              "props": {
                "value": true
              }
            },
            "positiveBranch": {
              "name": "StringLiteral",
              "props": {
                "value": "hello"
              }
            },
            "negativeBranch": {
              "name": "IntLiteral",
              "props": {
                "value": 2
              }
            }
          }
        }
      ]
    }
  },
  "if expression single statement": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Statement",
          "props": {
            "condition": {
              "name": "BooleanLiteral",
              "props": {
                "value": true
              }
            },
            "positiveBranch": {
              "name": "StringLiteral",
              "props": {
                "value": "hello"
              }
            },
            "negativeBranch": {
              "name": "ValDeclaration",
              "props": {
                "name": "x",
                "type": null,
                "value": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 2
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "nested ifs": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Statement",
          "props": {
            "condition": {
              "name": "BooleanLiteral",
              "props": {
                "value": true
              }
            },
            "positiveBranch": {
              "name": "If.Expression",
              "props": {
                "condition": {
                  "name": "Identifier",
                  "props": {
                    "value": "x"
                  }
                },
                "positiveBranch": {
                  "name": "StringLiteral",
                  "props": {
                    "value": "hello"
                  }
                },
                "negativeBranch": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 2
                  }
                }
              }
            },
            "negativeBranch": null
          }
        }
      ]
    }
  },
  "nested if expressions": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "BooleanLiteral",
              "props": {
                "value": true
              }
            },
            "positiveBranch": {
              "name": "If.Expression",
              "props": {
                "condition": {
                  "name": "Identifier",
                  "props": {
                    "value": "x"
                  }
                },
                "positiveBranch": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 1
                  }
                },
                "negativeBranch": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 2
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "IntLiteral",
              "props": {
                "value": 3
              }
            }
          }
        }
      ]
    }
  },
  "val with if inside if": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Statement",
          "props": {
            "condition": {
              "name": "BooleanLiteral",
              "props": {
                "value": true
              }
            },
            "positiveBranch": {
              "name": "ValDeclaration",
              "props": {
                "name": "x",
                "type": null,
                "value": {
                  "name": "If.Expression",
                  "props": {
                    "condition": {
                      "name": "Identifier",
                      "props": {
                        "value": "x"
                      }
                    },
                    "positiveBranch": {
                      "name": "IntLiteral",
                      "props": {
                        "value": 1
                      }
                    },
                    "negativeBranch": {
                      "name": "IntLiteral",
                      "props": {
                        "value": 2
                      }
                    }
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "IntLiteral",
              "props": {
                "value": 3
              }
            }
          }
        }
      ]
    }
  },
  "multiple member accesses and invocations": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "Invocation",
          "props": {
            "function": {
              "name": "Invocation",
              "props": {
                "function": {
                  "name": "Invocation",
                  "props": {
                    "function": {
                      "name": "BinaryExpression",
                      "props": {
                        "left": {
                          "name": "Invocation",
                          "props": {
                            "function": {
                              "name": "BinaryExpression",
                              "props": {
                                "left": {
                                  "name": "BinaryExpression",
                                  "props": {
                                    "left": {
                                      "name": "BinaryExpression",
                                      "props": {
                                        "left": {
                                          "name": "IntLiteral",
                                          "props": {
                                            "value": 1
                                          }
                                        },
                                        "right": {
                                          "name": "Identifier",
                                          "props": {
                                            "value": "a"
                                          }
                                        },
                                        "operator": "Dot"
                                      }
                                    },
                                    "right": {
                                      "name": "Identifier",
                                      "props": {
                                        "value": "b"
                                      }
                                    },
                                    "operator": "Dot"
                                  }
                                },
                                "right": {
                                  "name": "Identifier",
                                  "props": {
                                    "value": "c"
                                  }
                                },
                                "operator": "Dot"
                              }
                            },
                            "arguments": [],
                            "typeArguments": []
                          }
                        },
                        "right": {
                          "name": "Identifier",
                          "props": {
                            "value": "d"
                          }
                        },
                        "operator": "Dot"
                      }
                    },
                    "arguments": [
                      {
                        "name": "FunctionArgument",
                        "props": {
                          "name": null,
                          "value": {
                            "name": "Identifier",
                            "props": {
                              "value": "x"
                            }
                          }
                        }
                      }
                    ],
                    "typeArguments": []
                  }
                },
                "arguments": [
                  {
                    "name": "FunctionArgument",
                    "props": {
                      "name": null,
                      "value": {
                        "name": "Identifier",
                        "props": {
                          "value": "y"
                        }
                      }
                    }
                  }
                ],
                "typeArguments": []
              }
            },
            "arguments": [
              {
                "name": "FunctionArgument",
                "props": {
                  "name": null,
                  "value": {
                    "name": "Identifier",
                    "props": {
                      "value": "z"
                    }
                  }
                }
              }
            ],
            "typeArguments": []
          }
        }
      ]
    }
  },
  "multiple member accesses and invocations with named parameters": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "Invocation",
          "props": {
            "function": {
              "name": "Invocation",
              "props": {
                "function": {
                  "name": "Invocation",
                  "props": {
                    "function": {
                      "name": "BinaryExpression",
                      "props": {
                        "left": {
                          "name": "Invocation",
                          "props": {
                            "function": {
                              "name": "BinaryExpression",
                              "props": {
                                "left": {
                                  "name": "BinaryExpression",
                                  "props": {
                                    "left": {
                                      "name": "BinaryExpression",
                                      "props": {
                                        "left": {
                                          "name": "IntLiteral",
                                          "props": {
                                            "value": 1
                                          }
                                        },
                                        "right": {
                                          "name": "Identifier",
                                          "props": {
                                            "value": "a"
                                          }
                                        },
                                        "operator": "Dot"
                                      }
                                    },
                                    "right": {
                                      "name": "Identifier",
                                      "props": {
                                        "value": "b"
                                      }
                                    },
                                    "operator": "Dot"
                                  }
                                },
                                "right": {
                                  "name": "Identifier",
                                  "props": {
                                    "value": "c"
                                  }
                                },
                                "operator": "Dot"
                              }
                            },
                            "arguments": [],
                            "typeArguments": []
                          }
                        },
                        "right": {
                          "name": "Identifier",
                          "props": {
                            "value": "d"
                          }
                        },
                        "operator": "Dot"
                      }
                    },
                    "arguments": [
                      {
                        "name": "FunctionArgument",
                        "props": {
                          "name": null,
                          "value": {
                            "name": "Identifier",
                            "props": {
                              "value": "x"
                            }
                          }
                        }
                      }
                    ],
                    "typeArguments": []
                  }
                },
                "arguments": [
                  {
                    "name": "FunctionArgument",
                    "props": {
                      "name": null,
                      "value": {
                        "name": "Identifier",
                        "props": {
                          "value": "y"
                        }
                      }
                    }
                  }
                ],
                "typeArguments": []
              }
            },
            "arguments": [
              {
                "name": "FunctionArgument",
                "props": {
                  "name": "a",
                  "value": {
                    "name": "Identifier",
                    "props": {
                      "value": "z"
                    }
                  }
                }
              },
              {
                "name": "FunctionArgument",
                "props": {
                  "name": "b",
                  "value": {
                    "name": "Identifier",
                    "props": {
                      "value": "x"
                    }
                  }
                }
              }
            ],
            "typeArguments": []
          }
        }
      ]
    }
  },
  "multiple member accesses and invocations with named regular and type parameters": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "Invocation",
          "props": {
            "function": {
              "name": "Invocation",
              "props": {
                "function": {
                  "name": "Invocation",
                  "props": {
                    "function": {
                      "name": "BinaryExpression",
                      "props": {
                        "left": {
                          "name": "Invocation",
                          "props": {
                            "function": {
                              "name": "BinaryExpression",
                              "props": {
                                "left": {
                                  "name": "BinaryExpression",
                                  "props": {
                                    "left": {
                                      "name": "BinaryExpression",
                                      "props": {
                                        "left": {
                                          "name": "IntLiteral",
                                          "props": {
                                            "value": 1
                                          }
                                        },
                                        "right": {
                                          "name": "Identifier",
                                          "props": {
                                            "value": "a"
                                          }
                                        },
                                        "operator": "Dot"
                                      }
                                    },
                                    "right": {
                                      "name": "Identifier",
                                      "props": {
                                        "value": "b"
                                      }
                                    },
                                    "operator": "Dot"
                                  }
                                },
                                "right": {
                                  "name": "Identifier",
                                  "props": {
                                    "value": "c"
                                  }
                                },
                                "operator": "Dot"
                              }
                            },
                            "arguments": [],
                            "typeArguments": []
                          }
                        },
                        "right": {
                          "name": "Identifier",
                          "props": {
                            "value": "d"
                          }
                        },
                        "operator": "Dot"
                      }
                    },
                    "arguments": [
                      {
                        "name": "FunctionArgument",
                        "props": {
                          "name": null,
                          "value": {
                            "name": "Identifier",
                            "props": {
                              "value": "x"
                            }
                          }
                        }
                      }
                    ],
                    "typeArguments": []
                  }
                },
                "arguments": [
                  {
                    "name": "FunctionArgument",
                    "props": {
                      "name": null,
                      "value": {
                        "name": "Identifier",
                        "props": {
                          "value": "y"
                        }
                      }
                    }
                  }
                ],
                "typeArguments": [
                  {
                    "name": "TypeArgument",
                    "props": {
                      "name": "T",
                      "value": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "List",
                          "nullable": false,
                          "typesParameters": [
                            {
                              "name": "TypeArgument",
                              "props": {
                                "name": null,
                                "value": {
                                  "name": "Type.Regular",
                                  "props": {
                                    "name": "T",
                                    "nullable": true,
                                    "typesParameters": []
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [
              {
                "name": "FunctionArgument",
                "props": {
                  "name": "a",
                  "value": {
                    "name": "Identifier",
                    "props": {
                      "value": "z"
                    }
                  }
                }
              },
              {
                "name": "FunctionArgument",
                "props": {
                  "name": "b",
                  "value": {
                    "name": "Identifier",
                    "props": {
                      "value": "x"
                    }
                  }
                }
              }
            ],
            "typeArguments": [
              {
                "name": "TypeArgument",
                "props": {
                  "name": "X",
                  "value": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "String",
                      "nullable": true,
                      "typesParameters": []
                    }
                  }
                }
              },
              {
                "name": "TypeArgument",
                "props": {
                  "name": "Y",
                  "value": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "Int",
                      "nullable": false,
                      "typesParameters": []
                    }
                  }
                }
              },
              {
                "name": "TypeArgument",
                "props": {
                  "name": "T",
                  "value": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "List",
                      "nullable": true,
                      "typesParameters": [
                        {
                          "name": "TypeArgument",
                          "props": {
                            "name": null,
                            "value": {
                              "name": "Type.Regular",
                              "props": {
                                "name": "Int",
                                "nullable": true,
                                "typesParameters": []
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  "empty program": {
    "name": "Statements",
    "props": {
      "statements": []
    }
  },
  "empty if block": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Statement",
          "props": {
            "condition": {
              "name": "BooleanLiteral",
              "props": {
                "value": true
              }
            },
            "positiveBranch": {
              "name": "Block.WithoutValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "IntLiteral",
              "props": {
                "value": 2
              }
            }
          }
        }
      ]
    }
  },
  "if expression with lambdas": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "Lambda",
                  "props": {
                    "parameters": [
                      {
                        "name": "Pair",
                        "props": {
                          "first": "y",
                          "second": {
                            "name": "Type.Regular",
                            "props": {
                              "name": "Int",
                              "nullable": false,
                              "typesParameters": []
                            }
                          }
                        }
                      }
                    ],
                    "statements": {
                      "name": "Statements",
                      "props": {
                        "statements": [
                          {
                            "name": "ValDeclaration",
                            "props": {
                              "name": "x",
                              "type": null,
                              "value": {
                                "name": "FloatLiteral",
                                "props": {
                                  "value": 3.14
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "returnValue": {
                      "name": "StringLiteral",
                      "props": {
                        "value": "hello"
                      }
                    }
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "Lambda",
                  "props": {
                    "parameters": [],
                    "statements": {
                      "name": "Statements",
                      "props": {
                        "statements": []
                      }
                    },
                    "returnValue": {
                      "name": "IntLiteral",
                      "props": {
                        "value": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if expression with positive branch lambda": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Lambda",
              "props": {
                "parameters": [],
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "returnValue": {
                  "name": "Unit",
                  "props": {}
                }
              }
            },
            "negativeBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 2
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if expression with negative branch lambda": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "returnValue": {
                  "name": "StringLiteral",
                  "props": {
                    "value": "hello"
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "Lambda",
                  "props": {
                    "parameters": [],
                    "statements": {
                      "name": "Statements",
                      "props": {
                        "statements": []
                      }
                    },
                    "returnValue": {
                      "name": "IntLiteral",
                      "props": {
                        "value": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if statement with a lambda": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Statement",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Block.WithoutValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      },
                      {
                        "name": "StringLiteral",
                        "props": {
                          "value": "hello"
                        }
                      },
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "y",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 2.16
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "negativeBranch": {
              "name": "Lambda",
              "props": {
                "parameters": [],
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "IntLiteral",
                  "props": {
                    "value": 2
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if expression that look pretty ambiguous": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Lambda",
              "props": {
                "parameters": [
                  {
                    "name": "Pair",
                    "props": {
                      "first": "y",
                      "second": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Int",
                          "nullable": false,
                          "typesParameters": []
                        }
                      }
                    }
                  }
                ],
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      },
                      {
                        "name": "StringLiteral",
                        "props": {
                          "value": "hello"
                        }
                      },
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "y",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 2.16
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "returnValue": {
                  "name": "Unit",
                  "props": {}
                }
              }
            },
            "negativeBranch": {
              "name": "Block.WithValue",
              "props": {
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": []
                  }
                },
                "returnValue": {
                  "name": "Lambda",
                  "props": {
                    "parameters": [],
                    "statements": {
                      "name": "Statements",
                      "props": {
                        "statements": []
                      }
                    },
                    "returnValue": {
                      "name": "IntLiteral",
                      "props": {
                        "value": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "if expression that look even more ambiguous": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "If.Expression",
          "props": {
            "condition": {
              "name": "Identifier",
              "props": {
                "value": "x"
              }
            },
            "positiveBranch": {
              "name": "Lambda",
              "props": {
                "parameters": [],
                "statements": {
                  "name": "Statements",
                  "props": {
                    "statements": [
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "x",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 3.14
                            }
                          }
                        }
                      },
                      {
                        "name": "StringLiteral",
                        "props": {
                          "value": "hello"
                        }
                      },
                      {
                        "name": "ValDeclaration",
                        "props": {
                          "name": "y",
                          "type": null,
                          "value": {
                            "name": "FloatLiteral",
                            "props": {
                              "value": 2.16
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "returnValue": {
                  "name": "Unit",
                  "props": {}
                }
              }
            },
            "negativeBranch": {
              "name": "IntLiteral",
              "props": {
                "value": 2
              }
            }
          }
        }
      ]
    }
  },
  "empty function": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "FunctionDeclaration",
          "props": {
            "body": {
              "name": "Statements",
              "props": {
                "statements": []
              }
            },
            "name": "f",
            "parameters": [
              {
                "name": "Parameter",
                "props": {
                  "name": "n",
                  "type": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "Int",
                      "nullable": false,
                      "typesParameters": []
                    }
                  }
                }
              }
            ],
            "returnType": {
              "name": "Type.Regular",
              "props": {
                "name": "Unit",
                "nullable": false,
                "typesParameters": []
              }
            },
            "typeParameters": []
          }
        }
      ]
    }
  },
  "class with primitive properties": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ClassDeclaration",
          "props": {
            "name": "A",
            "typeParameters": [],
            "members": [
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "x",
                      "type": null,
                      "value": {
                        "name": "IntLiteral",
                        "props": {
                          "value": 1
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "z",
                      "type": null,
                      "value": {
                        "name": "IntLiteral",
                        "props": {
                          "value": 2
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "h",
                      "type": {
                        "name": "Type.Functional",
                        "props": {
                          "parameterTypes": [
                            {
                              "name": "Type.Regular",
                              "props": {
                                "name": "Float",
                                "nullable": false,
                                "typesParameters": []
                              }
                            }
                          ],
                          "resultType": {
                            "name": "Type.Regular",
                            "props": {
                              "name": "Int",
                              "nullable": false,
                              "typesParameters": []
                            }
                          },
                          "nullable": false
                        }
                      },
                      "value": {
                        "name": "Lambda",
                        "props": {
                          "parameters": [
                            {
                              "name": "Pair",
                              "props": {
                                "first": "x",
                                "second": {
                                  "name": "Type.Regular",
                                  "props": {
                                    "name": "Float",
                                    "nullable": false,
                                    "typesParameters": []
                                  }
                                }
                              }
                            }
                          ],
                          "statements": {
                            "name": "Statements",
                            "props": {
                              "statements": []
                            }
                          },
                          "returnValue": {
                            "name": "BinaryExpression",
                            "props": {
                              "left": {
                                "name": "BinaryExpression",
                                "props": {
                                  "left": {
                                    "name": "Identifier",
                                    "props": {
                                      "value": "this"
                                    }
                                  },
                                  "right": {
                                    "name": "Identifier",
                                    "props": {
                                      "value": "x"
                                    }
                                  },
                                  "operator": "Dot"
                                }
                              },
                              "right": {
                                "name": "Identifier",
                                "props": {
                                  "value": "x"
                                }
                              },
                              "operator": "Plus"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ],
            "constructorParameters": [
              {
                "name": "ConstructorParameter",
                "props": {
                  "name": "x",
                  "type": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "Int",
                      "nullable": false,
                      "typesParameters": []
                    }
                  },
                  "visibilityModifier": "Private"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "class with methods": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ClassDeclaration",
          "props": {
            "name": "A",
            "typeParameters": [],
            "members": [
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "x",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "z",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "h",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              }
            ],
            "constructorParameters": [
              {
                "name": "ConstructorParameter",
                "props": {
                  "name": "x",
                  "type": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "Int",
                      "nullable": false,
                      "typesParameters": []
                    }
                  },
                  "visibilityModifier": "Private"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "class with mixed properties no 1": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ClassDeclaration",
          "props": {
            "name": "A",
            "typeParameters": [],
            "members": [
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "x",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "z",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "f",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "@ a",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "+",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "z",
                      "type": null,
                      "value": {
                        "name": "IntLiteral",
                        "props": {
                          "value": 2
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "y",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              }
            ],
            "constructorParameters": [
              {
                "name": "ConstructorParameter",
                "props": {
                  "name": "x",
                  "type": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "Int",
                      "nullable": false,
                      "typesParameters": []
                    }
                  },
                  "visibilityModifier": "Private"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "class with mixed properties no 2": {
    "name": "Statements",
    "props": {
      "statements": [
        {
          "name": "ClassDeclaration",
          "props": {
            "name": "A",
            "typeParameters": [],
            "members": [
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "x",
                      "type": null,
                      "value": {
                        "name": "IntLiteral",
                        "props": {
                          "value": 1
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "x",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "z",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "z",
                      "type": null,
                      "value": {
                        "name": "IntLiteral",
                        "props": {
                          "value": 2
                        }
                      }
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Public",
                  "declaration": {
                    "name": "FunctionDeclaration",
                    "props": {
                      "body": {
                        "name": "Statements",
                        "props": {
                          "statements": []
                        }
                      },
                      "name": "h",
                      "parameters": [],
                      "returnType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Unit",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "typeParameters": []
                    }
                  }
                }
              },
              {
                "name": "Member",
                "props": {
                  "visibilityModifier": "Private",
                  "declaration": {
                    "name": "ValDeclaration",
                    "props": {
                      "name": "h",
                      "type": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Float",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "value": {
                        "name": "FloatLiteral",
                        "props": {
                          "value": 3.2
                        }
                      }
                    }
                  }
                }
              }
            ],
            "constructorParameters": [
              {
                "name": "ConstructorParameter",
                "props": {
                  "name": "x",
                  "type": {
                    "name": "Type.Regular",
                    "props": {
                      "name": "Int",
                      "nullable": true,
                      "typesParameters": []
                    }
                  },
                  "visibilityModifier": "Private"
                }
              },
              {
                "name": "ConstructorParameter",
                "props": {
                  "name": "y",
                  "type": {
                    "name": "Type.Functional",
                    "props": {
                      "parameterTypes": [
                        {
                          "name": "Type.Regular",
                          "props": {
                            "name": "Int",
                            "nullable": false,
                            "typesParameters": []
                          }
                        }
                      ],
                      "resultType": {
                        "name": "Type.Regular",
                        "props": {
                          "name": "Float",
                          "nullable": false,
                          "typesParameters": []
                        }
                      },
                      "nullable": false
                    }
                  },
                  "visibilityModifier": "Private"
                }
              }
            ]
          }
        }
      ]
    }
  }
}
